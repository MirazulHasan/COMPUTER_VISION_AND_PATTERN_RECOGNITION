# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1849Cnkg12g2T5yNPHy_b6C1BZK0q440M
"""

import matplotlib.pyplot as plt
import random
import math

X1 = [0,0,1,1]
X2 = [0,1,0,1]
Y = [0,0,0,1] #AND
# Y = [0,1,1,1] # OR
# Y = [0,1,1,0] # XOR

plt.figure()
for i in range(len(Y)):
  if Y[i] == 0:
    plt.plot(X1[i], X2[i], "bo")
  else:
    plt.plot(X1[i], X2[i], "ro")
plt.show()

W = [random.random(), random.random()]
b = random.random()
print(W, b)

lr = 0.01
theta = 0.5

from IPython import display

epoch = 0
count = 0

while count < 4:
  total_error = 0
  # print(f"Epoch: {epoch}")
  for i in range(len(Y)):
    ws = W[0]*X1[i] + W[1]*X2[i] + b
    pred = 0
    if ws > theta:
      pred = 1

    error = Y[i] - pred
    if error != 0:
      count = 0
      total_error += math.sqrt(error**2)
      W[0] += lr*error*X1[i]
      W[1] += lr*error*X2[i]
      b += lr*error
    else:
      count += 1

  #   print(f"[{X1[i]}, {X2[i]}] = {pred}")
  # print(f"Loss: {total_error}")
  # print(f"--"*10)
  epoch +=1
  plt.figure()
  display.clear_output(wait=True)
  for i in range(len(Y)):
    if Y[i] == 0:
      plt.plot(X1[i], X2[i], "bo")
    else:
      plt.plot(X1[i], X2[i], "ro")

      xx = plt.xlim()
      xint = (theta-b) / W[0]
      yint = (theta-b) / W[1]
      slope = -yint/xint
      yy = []
      for x in xx:
        yy.append(slope*x+yint)
      plt.plot(xx,yy)

      plt.xlim([-1,2])
      plt.ylim([-1,2])
  plt.show()

